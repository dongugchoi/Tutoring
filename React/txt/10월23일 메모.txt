스프링부트는 MVC패턴이다.

model : 데이터를 의미
view : 사용자가 보고 사용하는 화면
controller : 사용자의 요청을 파악하고 그에 맞는 결과를 사용자에게 반환

1.Request -> Controller -> service -> repository -> db


Gradle
Gradle은 의존성 관리, 테스트 실행, 배포, 패키징 등의 
빌드 작업을 자동화하며, 유연성과 확장성을 중시한다.

plugins {
	id 'java' //자바 프로젝트에서 필수적인 빌드 작업들을 제공하는 플러그인이다.자바 코드를 컴파일하고, 테스트 코드를 실행하며, JAR 파일을 생성하는 작업을 자동으로 처리해준다.
	id 'org.springframework.boot' version '3.2.10'//스프링 부트 관련 종속성을 관리하고, 스프링 부트 애플리케이션을 패키징하거나 실행하는 데 필요한 작업들을 자동으로 제공해준다.
	id 'io.spring.dependency-management' version '1.1.6'//라이브러리나 플러그인의 의존성 버전을 쉽게 관리하고, 중복된 의존성이나 버전 충돌 문제를 방지해준다.
}

group
프로젝트의 그룹 ID를 설정한다.

version
프로젝트 버전을 설정한다.
SNAPSHOT은 아직 완성되지 않은 버전이라는 의미로 자주 사용된다.

자바 버전 설정(toolchain)
자바 버전 17을 사용하도록 설정하는 부분이다.
Gradle은 toolchain을 통해 명시적으로 자바 버전을 관리할 수 있다.
이 설정을 통해 자바 17 버전의 컴파일러와 런타임 환경에서 프로젝트가 빌드되도록 한다.

Configuration 설정
이 설정은 컴파일할 때만 사용되는 의존성 설정이다.

저장소 설정
Gradle이 라이브러리를 다운로드 하는 곳을 레포지토리라고 한다.
Maven Central을 주로 사용한다.

@Builder
객체 생성을 위한 디자인 패턴 중 하나
Builder클래스를 따로 개발하지 않고도 Builder패턴을 사용해서 객체를 만들 수 있다.

@NoArgsConstructor
매개변수가 없는 생성자를 구현해준다.
ex)
public TodoEntity(){

}

@AllArgsConstructor
클래스의 모든 멤버를 매개변수로 받는 생성자를 구현해준다.
ex)
public TodoEntity(String id, String userId, String title, boolean done){
    this.id = id;
    this.userId = userId;
    this.title = title;
    this.done = done;
}

NoArgsConstructor 과 AllArgsConstructor을 같이 사용하는이유
ㄴ 오버로딩과 동일한 효과 / abc클래스에
    abc(매개변수없음) abc(매개변수있음) 두개의 생성자가 만들어짐

@Data
멤버 변수의 Setter와 Getter 메서드를 구현해준다.


