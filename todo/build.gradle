plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.4'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.test'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	// ↓프로젝트에서 런타임에 사용될 라이브러리를 정의한다
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok' //자바코드에서 Getter,Setter 생성자 등을 자동으로 생성해주는 라이브러리
	runtimeOnly 'com.h2database:h2' //런타임에만 필요한 라이브러리를 정의한다.
	annotationProcessor 'org.projectlombok:lombok' //컴파일 타임에 애노테이션을 처리하는 라이브러리다.
                                                   //Lombok 같은 애노테이션 프로세서를 등록하는 곳이다.
	testImplementation 'org.springframework.boot:spring-boot-starter-test' //테스트 코드를 실행할 때 필요한 라이브러리이다.
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher' //테스트 환경에서만 사용할 수 있는 라이브러리이다.
	// https://mvnrepository.com/artifact/com.google.guava/guava
	implementation group: 'com.google.guava', name: 'guava', version: '33.3.1-jre'
	
	  // SLF4J 의존성 추가
    implementation 'org.slf4j:slf4j-api:1.7.30'
    implementation 'ch.qos.logback:logback-classic:1.2.3'
	
}


//테스트 설정
//테스트 설정
//JUnit 플랫폼을 사용해 테스트를 실행하도록 설정한다.
tasks.named('test') {
	useJUnitPlatform()
}
